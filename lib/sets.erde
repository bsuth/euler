module function nCr(n, r) {
  if n < r {
    return 0
  } elseif n < 2 * r {
    r = n - r
  } elseif r == 0 {
    return 1
  }

  local result = n

  for i = 2, r {
    result *= (n - i + 1) / i
  }

  return result
}

module function nPr(n, r) {
  local result = n

  for i = 1, r - 1 {
    result *= n - i
  }

  return result
}

module function combinations(S, n = #S) {
  if n == 0 {
    return { {} }
  }

  local lastElement = S[n]
  local result = {}

  for _, combination in pairs(combinations(S, n - 1)) {
    table.insert(result, combination)

    local withLastElement = shallowCopy(combination)
    table.insert(withLastElement, lastElement)
    table.insert(result, withLastElement)
  }

  return result
}
